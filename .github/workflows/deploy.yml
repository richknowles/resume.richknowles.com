name: Build & Deploy Resume Site

on:
  push:
    branches: [ main ]
    paths-ignore: [ README.md ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Check out your code
      - uses: actions/checkout@v3

      # 2. Set up Docker Buildx (crossâ€‘platform builder)
      - uses: docker/setup-buildx-action@v2

      # 3. Cache npm installs
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4. Install Node.js & build your Next.js app
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install & Build
        run: |
          npm ci
          npm run build

      # 5. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6. Build & push an AMD64 image with layer caching
      - name: Build and Push AMD64 Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: rightontron/resume-site:latest
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production     # pulls in SSH_HOST, SSH_USER & SSH_KEY
    steps:
      - uses: actions/checkout@v3

      - name: Debug SSH inputs
        run: |
          echo "HOST     = ${{ secrets.SSH_HOST }}"
          echo "USER     = ${{ secrets.SSH_USER }}"
          echo "KEY size = $(echo -n "${{ secrets.SSH_KEY }}" | wc -c) bytes"

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key:      ${{ secrets.SSH_KEY }}
          debug:    true
          port: 22               # or your SSH port
          script: |
            docker pull rightontron/resume-site:latest
            docker rm -f resume-site || true
            docker run -d \
              --name resume-site \
              -p 3001:3001 \
              rightontron/resume-site:latest
            sudo nginx -t && sudo systemctl reload nginx
